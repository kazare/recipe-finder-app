{"version":3,"sources":["recipeList.js","App.js","index.js"],"names":["RecipeList","label","image","url","servings","calories","cookTime","ingredients","sourceLabel","sourceUrl","diets","healthLabels","className","src","alt","href","target","rel","Math","round","map","diet","ingredient","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","error","setError","errorDiv","setErrorDiv","showErrorDiv","msg","console","log","message","hideErrorDiv","useEffect","fetch","process","then","response","json","data","hits","errmsg","Err","onSubmit","event","preventDefault","type","value","onChange","recipe","index","shareAs","yield","totalTime","ingredientLines","source","dietLabels","uri","id","data-color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d5ae952.chunk.js","sourcesContent":["import React from 'react';\r\nimport './recipe.css';\r\n\r\n// Format list of recipes\r\nconst RecipeList = ({ label, image, url, servings, calories, cookTime, ingredients, sourceLabel, sourceUrl, diets, healthLabels }) => {\r\n    return (\r\n        <div className=\"recipe\">\r\n            <img src={image} alt={label} />\r\n\r\n            <div className=\"info\">\r\n                <h2 className=\"title\">{label}</h2>\r\n                <a className=\"nutriInfo\" href={url} target=\"_blank\" rel=\" noreferrer noopener\">Nutrition Info</a>\r\n\r\n                <div className=\"cookInfo\">\r\n                    <span>Servings: {servings}</span>\r\n                    <span>Calories: {Math.round((calories / servings))}</span>\r\n                    <span>Time (min): {cookTime}</span>\r\n                </div>\r\n\r\n                <p className=\"diet\">\r\n                    {/*Map data to elements*/}\r\n                    {diets.map(diet => {\r\n                        return (<span>{diet}</span>);\r\n                    })}\r\n                </p>\r\n\r\n                <h3>Ingredients</h3>\r\n                <ul className=\"ingredientList\">\r\n                    {/*Map data to elements*/}\r\n                    {ingredients.map(ingredient => {\r\n                        return (<li>{ingredient}</li>);\r\n                    })}\r\n                </ul>\r\n\r\n                <a href={sourceUrl} target=\"_blank\" rel=\" noreferrer noopener\"><div className=\"btn\">View on {sourceLabel}</div></a>\r\n                {/*Map data to elements*/}\r\n                <p className=\"health\">\r\n                    {healthLabels.map(label => {\r\n                        return (<span>{label}</span>);\r\n                    })}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RecipeList;","import React, { useEffect, useState } from 'react';\nimport RecipeList from './recipeList';\n\nconst App = () => {\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('chicken');\n  const [error, setError] = useState(' ');\n  const [errorDiv, setErrorDiv] = useState(false);\n\n  const API_KEY = process.env.REACT_APP_API_KEY;\n\n  // Fetch recipes from API\n  const getRecipes = () => {\n    fetch(`https://edamam-recipe-search.p.rapidapi.com/search?q=${query}`, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-key\": `${API_KEY}`,\n        \"x-rapidapi-host\": \"edamam-recipe-search.p.rapidapi.com\"\n      }\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // If recipes are found set to state\n        console.log(\"Fetching data...\");\n        setRecipes(data.hits);\n        hideErrorDiv();\n      },\n        (errmsg) => {\n          showErrorDiv(errmsg);\n        })\n  };\n\n  const showErrorDiv = (msg) => {\n    // If error encountered print to console\n    // Show a message to user\n    // Reset recipe field\n    console.log(`Error: ${msg.message}`);\n    setError(`${query}\" not found! Please try again.`);\n    setRecipes([]);\n    setErrorDiv(true);\n  }\n\n  const hideErrorDiv = () => {\n    // Remove warning\n    setError('');\n    setErrorDiv(false);\n  };\n\n  // Only update when query changes\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  // Get value of search and set it to state\n  const updateSearch = ({ target }) => {\n    setSearch(target.value);\n  };\n\n  // Prevent page from refreshing\n  // Set query to search value\n  // Clear search bar\n  const getSearch = (event) => {\n    event.preventDefault();\n    setQuery(search);\n    setSearch('');\n  };\n\n  // Error message component\n  const Err = () => {\n    return (\n      /* Error message container */\n      <div className=\"errormsg\">{error}</div>\n    );\n  };\n\n  return (\n    <div className=\"main\">\n      {/* beginning of header */}\n      <header className=\"header\">\n        <h1>Recipe Finder</h1>\n        <form onSubmit={getSearch}>\n          <input type=\"text\" value={search} onChange={updateSearch} />\n          <button type=\"submit\">Search</button>\n        </form>\n      </header>\n      <div className=\"recipeList\">\n        {/* If true show error div */}\n        {errorDiv ? <Err /> : null}\n\n        {/*Retrieve appropiate values to labels and pass to component*/}\n        {recipes.map((recipe, index) => {\n          return (\n            <RecipeList\n              key={recipe.recipe.uri}\n              label={recipe.recipe.label}\n              image={recipe.recipe.image}\n              url={recipe.recipe.shareAs}\n              servings={recipe.recipe.yield}\n              calories={recipe.recipe.calories}\n              cookTime={recipe.recipe.totalTime}\n              ingredients={recipe.recipe.ingredientLines}\n              sourceLabel={recipe.recipe.source}\n              sourceUrl={recipe.recipe.url}\n              diets={recipe.recipe.dietLabels}\n              healthLabels={recipe.recipe.healthLabels}\n            />\n          );\n        })}\n      </div>\n      {/* Attribution link */}\n      <footer>\n        <div id=\"edamam-badge\" data-color=\"white\"></div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}